FROM nvidia/cuda:9.0-cudnn7-base

MAINTAINER Igor Rabkin <igor.rabkin@xiaoyi.com>

ARG TF_BRANCH=r.1.8
# ARG FILE_NAME=tensorflow-1.8.0-cp36-cp36m-linux_x86_64.whl
# ARG FTP_PATH=ftp://jenkins-cloud/pub/Tensorflow-1.8.0-9.0-cudnn7-devel-ubuntu16.04-Server_2.3.4.5/tensorflow-1.8.0-cp36-cp36m-linux_x86_64.whl


#################################################
#  Update repositories -- we will need them all #
#  the time, also when container is run         #
#################################################

ARG DEBIAN_FRONTEND=noninteractive 
RUN apt-get update


#################################################
#          Set Time Zone Asia/Jerusalem         #
#################################################

ENV TZ=Asia/Jerusalem
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone


#################################################
#     Very basic installations                  #
#################################################

RUN apt-get install -y --no-install-recommends \
    curl \
    wget \
    tree \
    vim \
    zip \
    unzip \
    rsync \
    sudo \
    openssh-client \
    software-properties-common \
    nano \
    htop \
    iputils-ping \
    git && \
    apt-get -q clean -y && \
    rm -rf /var/lib/apt/lists/* && \
    rm -f /var/cache/apt/*.bin

	
####################################
#         COPY protocols file      #
####################################

COPY protocols /etc

#################################
# Set user jenkins to the image #
#################################

RUN groupadd -r -g 1001 jenkins && \
    useradd -m -d /home/jenkins -u 1001 -g 1001 -s /bin/bash jenkins &&\
    echo "jenkins:jenkins" | chpasswd
	
# Add the jenkins user to sudoers
RUN echo "jenkins  ALL=(ALL)  NOPASSWD: ALL" >> etc/sudoers

# Set full permission for jenkins folder
RUN chmod -R 777 /home/jenkins
 

#################################################
#     Python 3.6 installations for dev          #
#################################################

RUN add-apt-repository ppa:jonathonf/python-3.6 && \
    apt-get update && apt-get install -y --no-install-recommends \
    python3.6 \
    python3.6-dev \
    python3.6-venv \
    && \ 
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
	
RUN ln -s /usr/bin/python3.6 /usr/local/bin/python3 && \
    ln -s /usr/local/bin/pip /usr/local/bin/pip3 && \
    ln -s /usr/bin/python3.6 /usr/local/bin/python
    
RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python3.6 get-pip.py && \
    rm get-pip.py 
   
   
################################################################## 
#              Pick up some TF dependencies                      #
##################################################################

RUN apt-get update && apt-get install -y --no-install-recommends \ 		 
    libfreetype6-dev \
    libpng12-dev \ 
    libzmq3-dev \
    libcurl3-dev \
    libgoogle-perftools-dev \		 
    pkg-config \  
    python3-tk && \    
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*  
 
 
#################################################
#     Python Installations                      #
#################################################

RUN python3.6 -m pip --no-cache-dir install \
    ipykernel \
    && \
    python3.6 -m ipykernel.kernelspec \
    && \
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
    
    
################################################################## 
#              Installing XIAOYI Packages                        #
##################################################################

RUN python3.6 -m pip --no-cache-dir install --index-url http://192.168.1.102:8888 xiaoyi --trusted-host 192.168.1.102 --upgrade &&\
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
    

#################################################
#     Install HDF5 with multithread support     #
#################################################

RUN curl -OSL https://support.hdfgroup.org/ftp/HDF5/current18/src/hdf5-1.8.20.tar && \
    tar -xvf hdf5-1.8.20.tar && \
    cd hdf5-1.8.20 && \
    ./configure --enable-threadsafe  --enable-unsupported --prefix /usr/local && \
    make && \
    make install && \
    cd .. && \
    rm hdf5-1.8.20.tar && rm -rf hdf5-1.8.20.tar && \
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
    
    ENV HDF5_DIR=/usr/local 
    RUN python3.6 -m pip --no-cache-dir install --no-binary=h5py h5py
    
    
###################################
# Install TensorFlow GPU version. #
###################################

RUN cd /
ARG FTP_PATH
ARG FILE_NAME
RUN curl -OSL ${FTP_PATH} -o ${FILE_NAME} && \
    pip --no-cache-dir install --upgrade ${FILE_NAME} && \
    rm -f ${FILE_NAME}  

  
##################################################
# Configure the build for our CUDA configuration #
##################################################

ENV CI_BUILD_PYTHON python
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
ENV TF_NEED_CUDA 1
ENV TF_CUDA_COMPUTE_CAPABILITIES=5.2,6.1
ENV TF_CUDA_VERSION=9.0
ENV TF_CUDNN_VERSION=7.0
 
################ INTEL MKL SUPPORT #################

ENV LIBRARY_PATH=/usr/local/lib:$LIBRARY_PATH
ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
RUN cd /usr/local/lib && \
    curl -OSL ftp://jenkins-cloud/pub/LIB/libiomp5.so -o libiomp5.so && \
    curl -OSL ftp://jenkins-cloud/pub/LIB/libmklml_gnu.so -o libmklml_gnu.so && \
    curl -OSL ftp://jenkins-cloud/pub/LIB/libmklml_intel.so -o libmklml_intel.so
    
####################################################


#########################################
# Add Welcome Message With Instructions #
#########################################

RUN echo '[ ! -z "$TERM" -a -r /etc/motd ] && cat /etc/issue && cat /etc/motd' \
	>> /etc/bash.bashrc \
	; echo "\
||||||||||||||||||||||||||||||||||||||||||||||||||\n\
|                                                |\n\
| Docker container running Ubuntu                |\n\
| with TensorFlow ${TF_BRANCH} optimized for GPU        |\n\
| with Intel(R) MKL Support                      |\n\
|                                                |\n\
||||||||||||||||||||||||||||||||||||||||||||||||||\n\
\n "\
	> /etc/motd
